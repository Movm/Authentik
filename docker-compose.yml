services:
  postgresql:
    image: postgres:16-alpine
    restart: unless-stopped
    volumes:
      - database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${PG_PASS}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_DB: ${PG_DB}

  redis:
    image: redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    volumes: [redis:/data]

  server:
    image: ghcr.io/goauthentik/server:${AUTHENTIK_TAG:-2025.4.1}
    command: server
    environment:
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
      # einmalig für Erst-Setup ↓
      AUTHENTIK_BOOTSTRAP_EMAIL: ${AK_BOOT_EMAIL}
      AUTHENTIK_BOOTSTRAP_PASSWORD: ${AK_BOOT_PASS}
    volumes: ["media:/media"]
    ports:
      - "9000:9000"
      - "9443:9443"
    depends_on:
      postgresql: { condition: service_healthy }
      redis:      { condition: service_healthy }

  worker:
    image: ghcr.io/goauthentik/server:${AUTHENTIK_TAG:-2025.4.1}
    command: worker
    environment: *ref_server_environment
    volumes: ["media:/media"]

volumes:
  database: {}
  redis: {}
  media: {}
